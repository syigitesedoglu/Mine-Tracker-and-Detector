#define encoderLeftPin 2 // Sol tekerlek enkoder D0 pini
#define encoderRightPin 3 // Sağ tekerlek enkoder D0 pini

#define motor1A 4 // Sol motor A pini
#define motor1B 5 // Sol motor B pini
#define motor2A 6 // Sağ motor A pini
#define motor2B 7 // Sağ motor B pini

volatile long leftPulseCount = 0; // Sol tekerlek darbe sayısı
volatile long rightPulseCount = 0; // Sağ tekerlek darbe sayısı

void setup() {
  pinMode(encoderLeftPin, INPUT);
  pinMode(encoderRightPin, INPUT);
  attachInterrupt(digitalPinToInterrupt(encoderLeftPin), leftEncoderPulse, RISING);
  attachInterrupt(digitalPinToInterrupt(encoderRightPin), rightEncoderPulse, RISING);
  
  pinMode(motor1A, OUTPUT);
  pinMode(motor1B, OUTPUT);
  pinMode(motor2A, OUTPUT);
  pinMode(motor2B, OUTPUT);
  
  serialBegin(9600); // Hata ayıklama için seri iletişimi başlatın
}

void loop() {
  // Sol ve sağ tekerlek darbe sayılarını seri monitöre yazdırın
  serialPrint("Sol: ");
  serialPrintln(leftPulseCount);
  serialPrint("Sağ: ");
  serialPrintln(rightPulseCount);

  // Hız hesaplama ve diğer işlemler için buraya kod ekleyin

  // Motorları kontrol etmek için kod ekleyin

  delay(100);
}

void leftEncoderPulse() {
  leftPulseCount++;
}

void rightEncoderPulse() {
  rightPulseCount++;
}

void motorControl(int leftSpeed, int rightSpeed) {
  // Sol motor kontrolü
  if (leftSpeed > 0) {
    digitalWrite(motor1A, HIGH);
    digitalWrite(motor1B, LOW);
  } else if (leftSpeed < 0) {
    digitalWrite(motor1A, LOW);
    digitalWrite(motor1B, HIGH);
  } else {
    digitalWrite(motor1A, LOW);
    digitalWrite(motor1B, LOW);
  }

  // Sağ motor kontrolü
  if (rightSpeed > 0) {
    digitalWrite(motor2A, HIGH);
    digitalWrite(motor2B, LOW);
  } else if (rightSpeed < 0) {
    digitalWrite(motor2A, LOW);
    digitalWrite(motor2B, HIGH);
  } else {
    digitalWrite(motor2A, LOW);
    digitalWrite(motor2B, LOW);
  }
}
